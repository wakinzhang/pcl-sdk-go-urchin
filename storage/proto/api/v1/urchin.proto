syntax = "proto3";

option go_package = "pcl-sdk-go-urchin/proto/api/v1";

package pcl.sdk.go.urchin.storage.proto.api.v1;

import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";
import "module/data_obj.proto";
import "module/storage_node.proto";
import "module/task.proto";
import "module/task_exec.proto";
import "module/config.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "存储系统";
    version: "1.0";
    license: {
      name: "MIT";
    };
  };
  schemes: HTTP;
  consumes: "application/json";
  produces: "application/json";
};

message BaseResp {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "默认返回结构体"
      description: "默认返回参数类型: BaseResp"
    }
  };

  // @inject_tag: json:"code"
  int32 code = 1[
    json_name="code",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "返回码，整数类型，非0即服务处理失败，具体错误码参看列表"}];

  // @inject_tag: json:"message"
  string message = 2[
    json_name="message",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "返回信息，字符串类型，服务处理失败时，包含相应错误信息"}];
}

message UploadObjectReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "上传数据对象接口请求参数"
      description: "上传数据对象请求参数类型: UploadObjectReq"
      required: ["user_id", "name", "type", "size"]
    }
  };

  // @inject_tag: json:"user_id"
  string user_id = 1[
    (validate.rules).any.required = true,
    (validate.rules).string = {min_len: 1, max_len: 64},
    json_name="user_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "数据对象关联用户id，必填参数，字符串类型, 长度限制1~64"}];

  // @inject_tag: json:"name"
  string name = 2[
    (validate.rules).any.required = true,
    (validate.rules).string = {min_len: 1, max_len: 64},
    json_name="name",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "数据对象名称，必填参数，字符串类型, 长度限制1~64"}];

  // @inject_tag: json:"type"
  int32 type = 3[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gt: 0},
    json_name="type",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "数据对象类型，必填参数，整数类型，数值限制(0,~)，1: 文件; 2: 文件夹"}];

  // @inject_tag: json:"size"
  int32 size = 4[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gte: 0},
    json_name="size",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "数据对象大小，必填参数，单位字节，整数类型，数值限制[0,~)"}];

  // @inject_tag: json:"desc"
  optional string desc = 5[
    (validate.rules).string = {min_len: 0, max_len: 1024},
    json_name="desc",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "数据对象描述信息, 选填参数，字符串类型，长度限制0~1024"}];

  // @inject_tag: json:"node_id"
  optional int32 node_id = 6[
    (validate.rules).int32 = {gt: 0},
    json_name="node_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "上传分中心id，选填参数，整数类型，数值限制[1,~)，未提供该参数则由系统选定分中心"}];
}

message UploadObjectResp {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "上传数据对象接口返回参数"
      description: "上传数据对象返回参数类型: UploadObjectResp"
    }
  };

  // @inject_tag: json:"code"
  int32 code = 1[
    json_name="code",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "返回码，整数类型，非0即服务处理失败"}];

  // @inject_tag: json:"message"
  string message = 2[
    json_name="message",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "返回信息，字符串类型，服务处理失败时，包含相应错误信息"}];

  // @inject_tag: json:"task_id"
  int32 task_id = 3[
    json_name="task_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "任务id，标识该上传任务，整数类型，数值限制[1,~)"}];

  // @inject_tag: json:"node_type"
  int32 node_type = 4[
    json_name="node_type",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "分中心存储类型，1：ipfs；2：obs；3：minio；...，整数类型，数值限制[1,~)"}];
}

message CreateInitiateMultipartUploadSignedUrlReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "创建初始化上传段任务签名url接口请求参数"
      description: "创建初始化上传段任务签名url请求参数类型: CreateInitiateMultipartUploadSignedUrlReq"
      required: ["task_id"]
    }
  };

  // @inject_tag: json:"task_id"
  int32 task_id = 1[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gt: 0},
    json_name="task_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "上传任务id, 数值限制大于0"}];
}

message CreateUploadPartSignedUrlReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "创建分段上传签名url接口请求参数"
      description: "创建分段上传签名url请求参数类型: CreateUploadPartSignedUrlReq"
      required: ["upload_id", "part_number", "task_id"]
    }
  };

  // @inject_tag: json:"upload_id"
  string upload_id = 1[
    (validate.rules).any.required = true,
    (validate.rules).string = {min_len: 1, max_len: 64},
    json_name="upload_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "分段上传任务id, 字符串长度限制1~64"}];

  // @inject_tag: json:"part_number"
  int32 part_number = 2[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gt: 0},
    json_name="part_number",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "上传分段编号, 数值限制大于0"}];

  // @inject_tag: json:"task_id"
  int32 task_id = 3[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gt: 0},
    json_name="task_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "上传任务id, 数值限制大于0"}];
}

message CreateCompleteMultipartUploadSignedUrlReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "创建合并分段上传签名url接口请求参数"
      description: "创建合并分段上传签名url请求参数类型: CreateCompleteMultipartUploadSignedUrlReq"
      required: ["upload_id", "task_id"]
    }
  };

  // @inject_tag: json:"upload_id"
  string upload_id = 1[
    (validate.rules).any.required = true,
    (validate.rules).string = {min_len: 1, max_len: 64},
    json_name="upload_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "分段上传任务id, 字符串长度限制1~64"}];

  // @inject_tag: json:"task_id"
  int32 task_id = 2[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gt: 0},
    json_name="task_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "上传任务id, 数值限制大于0"}];
}

message CreateSignedUrlResp {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "创建签名url接口返回参数"
      description: "创建签名url返回参数类型: CreateSignedUrlResp"
    }
  };

  // @inject_tag: json:"code"
  int32 code = 1[
    json_name="code",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "返回码，整数类型，非0即服务处理失败"}];

  // @inject_tag: json:"message"
  string message = 2[
    json_name="message",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "返回信息，字符串类型，服务处理失败时，包含相应错误信息"}];

  // @inject_tag: json:"signed_url"
  string signed_url = 3[
    json_name="signed_url",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "签名url，字符串类型"}];

  // @inject_tag: json:"header"
  map<string, HeaderValues> header = 4[
    json_name="header",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "请求header"}];
}

message HeaderValues {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "请求header项values"
      description: "请求header项values类型: HeaderValues"
    }
  };

  // @inject_tag: json:"values"
  repeated string values = 1[
    json_name="values",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "字符串数组类型"}];
}

message DownloadObjectReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "下载数据对象接口请求参数"
      description: "下载数据对象请求参数类型: DownloadObjectReq"
      required: ["user_id", "obj_uuid"]
    }
  };

  // @inject_tag: json:"user_id"
  string user_id = 1[
    (validate.rules).any.required = true,
    (validate.rules).string = {min_len: 1, max_len: 64},
    json_name="user_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "数据对象关联用户id，必填参数，字符串类型, 长度限制1~64"}];

  // @inject_tag: json:"obj_uuid"
  string obj_uuid = 2[
    (validate.rules).any.required = true,
    (validate.rules).string = {min_len: 1, max_len: 64},
    json_name="obj_uuid",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "数据对象唯一标识，必填参数，字符串类型, 长度限制1~64"}];

  // @inject_tag: json:"node_id"
  optional int32 node_id = 3[
    (validate.rules).int32 = {gt: 0},
    json_name="node_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "下载分中心id，选填参数，整数类型，数值限制[1,~)，未提供该参数则由系统选定分中心"}];
}

message DownloadObjectTaskParams {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "下载数据对象任务参数"
      description: "下载数据对象任务参数类型: DownloadObjectTaskParams"
    }
  };

  // @inject_tag: json:"request"
  DownloadObjectReq request = 1[
    json_name="request",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "接口请求参数"}];

  // @inject_tag: json:"node_id"
  int32 node_id = 2[
    json_name="node_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "下载分中心id，整数类型，数值限制[1,~)，未提供该参数则由系统选定分中心"}];
}

message DownloadObjectResp {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "下载数据对象接口返回参数"
      description: "下载数据对象返回参数类型: DownloadObjectResp"
    }
  };

  // @inject_tag: json:"code"
  int32 code = 1[
    json_name="code",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "返回码，整数类型，非0即服务处理失败"}];

  // @inject_tag: json:"message"
  string message = 2[
    json_name="message",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "返回信息，字符串类型，服务处理失败时，包含相应错误信息"}];

  // @inject_tag: json:"task_id"
  int32 task_id = 3[
    json_name="task_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "任务id，标识该下载任务，整数类型，数值限制[1,~)"}];

  // @inject_tag: json:"location"
  string location = 4[
    json_name="location",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "临时下载地址，字符串类型"}];

  // @inject_tag: json:"node_type"
  int32 node_type = 5[
    json_name="node_type",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "分中心存储类型，1：ipfs；2：obs；3：minio；...，整数类型，数值限制[1,~)"}];
}

message CreateListObjectsSignedUrlReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "创建列举对象签名url接口请求参数"
      description: "创建列举对象签名url请求参数类型: CreateListObjectsSignedUrlReq"
      required: ["prefix"]
    }
  };

  // @inject_tag: json:"prefix"
  string prefix = 1[
    (validate.rules).any.required = true,
    (validate.rules).string = {min_len: 1},
    json_name="prefix",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "对象前缀, 字符串长度限制1~"}];
}

message MigrateObjectReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "迁移数据对象接口请求参数"
      description: "迁移数据对象请求参数类型: MigrateObjectReq"
      required: ["user_id", "obj_uuid", "target_node_id"]
    }
  };

  // @inject_tag: json:"user_id"
  string user_id = 1[
    (validate.rules).any.required = true,
    (validate.rules).string = {min_len: 1, max_len: 64},
    json_name="user_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "数据对象关联用户id，必填参数，字符串类型, 长度限制1~64"}];

  // @inject_tag: json:"obj_uuid"
  string obj_uuid = 2[
    (validate.rules).any.required = true,
    (validate.rules).string = {min_len: 1, max_len: 64},
    json_name="obj_uuid",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "数据对象唯一标识，必填参数，字符串类型, 长度限制1~64"}];

  // @inject_tag: json:"source_node_id"
  optional int32 source_node_id = 3[
    (validate.rules).int32 = {gt: 0},
    json_name="source_node_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "迁移源分中心id，选填参数，整数类型，数值限制[1,~)，未提供该参数则由系统选定分中心"}];

  // @inject_tag: json:"target_node_id"
  int32 target_node_id = 4[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gt: 0},
    json_name="target_node_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "迁移目的分中心id，必填参数，整数类型，数值限制[1,~)"}];
}

message MigrateObjectTaskParams {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "迁移数据对象任务参数"
      description: "迁移数据对象任务参数类型: MigrateObjectTaskParams"
    }
  };

  // @inject_tag: json:"request"
  MigrateObjectReq request = 1[
    json_name="request",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "接口请求参数"}];

  // @inject_tag: json:"source_node_id"
  int32 source_node_id = 2[
    json_name="source_node_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "迁移源分中心id，整数类型，数值限制[1,~)，未提供该参数则由系统选定分中心"}];
}

message MigrateObjectResp {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "迁移数据对象接口返回参数"
      description: "迁移数据对象返回参数类型: MigrateObjectResp"
    }
  };

  // @inject_tag: json:"code"
  int32 code = 1[
    json_name="code",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "返回码，整数类型，非0即服务处理失败"}];

  // @inject_tag: json:"message"
  string message = 2[
    json_name="message",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "返回信息，字符串类型，服务处理失败时，包含相应错误信息"}];

  // @inject_tag: json:"task_id"
  int32 task_id = 3[
    json_name="task_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "任务id，标识该迁移任务，整数类型，数值限制[1,~)"}];

  // @inject_tag: json:"node_type"
  int32 node_type = 4[
    json_name="node_type",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "分中心存储类型，1：ipfs；2：obs；3：minio；...，整数类型，数值限制[1,~)"}];
}

message GetObjectReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "获取数据对象接口请求参数"
      description: "获取数据对象请求参数类型: GetObjectReq"
      required: ["user_id", "page_index", "page_size"]
    }
  };

  // @inject_tag: json:"user_id"
  string user_id = 1[
    (validate.rules).any.required = true,
    (validate.rules).string = {min_len: 1, max_len: 64},
    json_name="user_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "数据对象关联用户id，必填参数，字符串类型, 长度限制1~64"}];

  // @inject_tag: json:"page_index"
  int32 page_index = 2[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gt: 0},
    json_name="page_index",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "页码，必填参数, 数值限制大于0"}];

  // @inject_tag: json:"page_size"
  int32 page_size = 3[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gt: 0, lt: 100},
    json_name="page_size",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "单页记录数，必填参数, 数值限制[1,100)"}];

  // @inject_tag: json:"sort_by"
  optional string sort_by = 4[
    (validate.rules).string = {min_len: 1},
    json_name="sort_by",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "排序字段，选填参数, 字符串长度限制1~"}];

  // @inject_tag: json:"order_by"
  optional string order_by = 5[
    (validate.rules).string = {in: ["asc", "desc"]},
    json_name="order_by",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "排序类型，选填参数, 取值范围asc,desc"}];

  // @inject_tag: json:"obj_uuid"
  optional string obj_uuid = 6[
    (validate.rules).string = {min_len: 1, max_len: 64},
    json_name="obj_uuid",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "数据对象唯一标识，选填参数，字符串类型, 长度限制1~64"}];
}

message GetObjectResp {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "获取数据对象接口返回参数"
      description: "获取数据对象返回参数类型: GetObjectResp"
    }
  };

  // @inject_tag: json:"code"
  int32 code = 1[
    json_name="code",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "返回码，整数类型，非0即服务处理失败"}];

  // @inject_tag: json:"message"
  string message = 2[
    json_name="message",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "返回信息，字符串类型，服务处理失败时，包含相应错误信息"}];

  // @inject_tag: json:"data"
  GetObjectRespData data = 3[
    json_name="data",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "接口返回数据"}];
}

message GetObjectRespData {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "数据对象信息"
      description: "数据对象信息类型: GetObjectRespData"
      required: ["total", "list"]
    }
  };

  // @inject_tag: json:"total"
  int32 total = 1[
    json_name="total",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "记录数"}];

  // @inject_tag: json:"list"
  repeated module.DataObj list = 2[
    json_name="list",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "数据对象信息列表"}];
}

message DeleteObjectReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "删除数据对象接口请求参数"
      description: "删除数据对象请求参数类型: DeleteObjectReq"
      required: ["user_id", "obj_uuid"]
    }
  };

  // @inject_tag: json:"user_id"
  string user_id = 1[
    (validate.rules).any.required = true,
    (validate.rules).string = {min_len: 1, max_len: 64},
    json_name="user_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "数据对象关联用户id，必填参数，字符串类型, 长度限制1~64"}];

  // @inject_tag: json:"obj_uuid"
  string obj_uuid = 2[
    (validate.rules).any.required = true,
    (validate.rules).string = {min_len: 1, max_len: 64},
    json_name="obj_uuid",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "数据对象唯一标识，必填参数，字符串类型, 长度限制1~64"}];
}

message DeleteObjectResp {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "删除数据对象接口返回参数"
      description: "删除数据对象返回参数类型: DeleteObjectResp"
    }
  };

  // @inject_tag: json:"code"
  int32 code = 1[
    json_name="code",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "返回码，整数类型，非0即服务处理失败"}];

  // @inject_tag: json:"message"
  string message = 2[
    json_name="message",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "返回信息，字符串类型，服务处理失败时，包含相应错误信息"}];

  // @inject_tag: json:"task_id"
  int32 task_id = 3[
    json_name="task_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "任务id，标识该删除任务，整数类型，数值限制[1,~)"}];
}

message PutObjectReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "更新数据对象接口请求参数"
      description: "更新数据对象请求参数类型: PutObjectReq"
      required: ["user_id", "obj_uuid"]
    }
  };

  // @inject_tag: json:"user_id"
  string user_id = 1[
    (validate.rules).any.required = true,
    (validate.rules).string = {min_len: 1, max_len: 64},
    json_name="user_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "数据对象关联用户id，必填参数，字符串类型, 长度限制1~64"}];

  // @inject_tag: json:"obj_uuid"
  string obj_uuid = 2[
    (validate.rules).any.required = true,
    (validate.rules).string = {min_len: 1, max_len: 64},
    json_name="obj_uuid",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "数据对象唯一标识，必填参数，字符串类型, 长度限制1~64"}];

  // @inject_tag: json:"name"
  optional string name = 3[
    (validate.rules).string = {min_len: 1, max_len: 64},
    json_name="name",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "数据对象名称，选填参数，字符串类型, 长度限制1~64"}];

  // @inject_tag: json:"desc"
  optional string desc = 4[
    (validate.rules).string = {min_len: 0, max_len: 1024},
    json_name="desc",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "数据对象描述信息, 选填参数，字符串类型，长度限制0~1024"}];
}

message PostNodeReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "新增存储分中心接口请求参数"
      description: "新增存储分中心请求参数类型: PostNodeReq"
      required: ["name", "type", "property"]
    }
  };

  // @inject_tag: json:"name"
  string name = 1[
    (validate.rules).any.required = true,
    (validate.rules).string = {min_len: 1, max_len: 64},
    json_name="name",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "分中心名称，必填参数，字符串类型, 长度限制1~64"}];

  // @inject_tag: json:"desc"
  optional string desc = 2[
    (validate.rules).string = {min_len: 0, max_len: 1024},
    json_name="desc",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "分中心描述信息, 选填参数，字符串类型，长度限制0~1024"}];

  // @inject_tag: json:"type"
  int32 type = 3[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gt: 0},
    json_name="type",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "分中心存储类型，必填参数，1：ipfs；2：obs；3：minio；...，必填参数，整数类型，数值限制[1,~)"}];

  // @inject_tag: json:"property"
  int32 property = 4[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gt: 0},
    json_name="property",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "分中心属性，必填参数，按位标识，置位1则带有该属性，从右向左，第一位标识是否为缓存中心，第二位标识是否为持久化中心，必填参数，整数类型，数值限制[1,~)"}];

  // @inject_tag: json:"config"
  optional string config = 5[
    (validate.rules).string = {min_len: 0, max_len: 4096},
    json_name="config",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "分中心配置信息, 选填参数，其中账号、密码为加密信息，必填参数，字符串类型，长度限制0~4096"}];
}

message GetNodeReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "获取分中心接口请求参数"
      description: "获取分中心请求参数类型: GetNodeReq"
      required: ["page_index", "page_size"]
    }
  };

  // @inject_tag: json:"page_index"
  int32 page_index = 1[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gt: 0},
    json_name="page_index",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "页码，必填参数，数值限制大于0"}];

  // @inject_tag: json:"page_size"
  int32 page_size = 2[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gt: 0, lt: 100},
    json_name="page_size",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "单页记录数，必填参数, 数值限制[1,100)"}];

  // @inject_tag: json:"sort_by"
  optional string sort_by = 3[
    (validate.rules).string = {min_len: 1},
    json_name="sort_by",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "排序字段，选填参数, 字符串长度限制1~"}];

  // @inject_tag: json:"order_by"
  optional string order_by = 4[
    (validate.rules).string = {in: ["asc", "desc"]},
    json_name="order_by",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "排序类型，选填参数, 取值范围asc,desc"}];

  // @inject_tag: json:"node_id"
  optional int32 node_id = 5[
    (validate.rules).int32 = {gt: 0},
    json_name="node_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "分中心id，选填参数，整数类型, 取值范围[0,~)"}];
}

message GetNodeResp {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "获取分中心接口返回参数"
      description: "获取分中心返回参数类型: GetNodeResp"
    }
  };

  // @inject_tag: json:"code"
  int32 code = 1[
    json_name="code",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "返回码，整数类型，非0即服务处理失败"}];

  // @inject_tag: json:"message"
  string message = 2[
    json_name="message",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "返回信息，字符串类型，服务处理失败时，包含相应错误信息"}];

  // @inject_tag: json:"data"
  GetNodeRespData data = 3[
    json_name="data",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "接口返回数据"}];
}

message GetNodeRespData {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "分中心信息"
      description: "分中心信息类型: GetNodeRespData"
      required: ["total", "list"]
    }
  };

  // @inject_tag: json:"total"
  int32 total = 1[
    json_name="total",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "记录数"}];

  // @inject_tag: json:"list"
  repeated module.StorageNode list = 2[
    json_name="list",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "分中心信息列表"}];
}

message PutNodeReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "更新分中心接口请求参数"
      description: "更新分中心请求参数类型: PutNodeReq"
      required: ["node_id"]
    }
  };

  // @inject_tag: json:"node_id"
  int32 node_id = 1[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gt: 0},
    json_name="node_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "分中心id，必填参数，整数类型, 取值范围[0,~)"}];

  // @inject_tag: json:"name"
  optional string name = 2[
    (validate.rules).string = {min_len: 1, max_len: 64},
    json_name="name",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "分中心名称，选填参数，字符串类型, 长度限制1~64"}];

  // @inject_tag: json:"desc"
  optional string desc = 3[
    (validate.rules).string = {min_len: 0, max_len: 1024},
    json_name="desc",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "分中心描述信息, 选填参数，字符串类型，长度限制0~1024"}];

  // @inject_tag: json:"type"
  optional int32 type = 4[
    (validate.rules).int32 = {gt: 0},
    json_name="type",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "分中心存储类型, 选填参数，1：ipfs；2：obs；3：minio；...，必填参数，整数类型，数值限制[1,~)"}];

  // @inject_tag: json:"property"
  optional int32 property = 5[
    (validate.rules).int32 = {gt: 0},
    json_name="property",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "分中心属性, 选填参数，按位标识，置位1则带有该属性，从右向左，第一位标识是否为缓存中心，第二位标识是否为持久化中心，必填参数，整数类型，数值限制[1,~)"}];

  // @inject_tag: json:"status"
  optional int32 status = 6[
    (validate.rules).int32 = {gte: 0},
    json_name="status",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "分中心状态, 选填参数，整数类型，数值限制[0,~)，1：在线；2：离线"}];

  // @inject_tag: json:"config"
  optional string config = 7[
    (validate.rules).string = {min_len: 0, max_len: 4096},
    json_name="config",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "分中心配置信息, 选填参数，字符串类型，长度限制0~4096"}];
}

message GetTaskReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "获取任务接口请求参数"
      description: "获取任务请求参数类型: GetTaskReq"
      required: ["page_index", "page_size"]
    }
  };

  // @inject_tag: json:"page_index"
  int32 page_index = 1[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gt: 0},
    json_name="page_index",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "页码，必填参数, 数值限制大于0"}];

  // @inject_tag: json:"page_size"
  int32 page_size = 2[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gt: 0, lt: 100},
    json_name="page_size",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "单页记录数，必填参数，数值限制[1,100)"}];

  // @inject_tag: json:"sort_by"
  optional string sort_by = 3[
    (validate.rules).string = {min_len: 1},
    json_name="sort_by",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "排序字段，选填参数，字符串长度限制1~"}];

  // @inject_tag: json:"order_by"
  optional string order_by = 4[
    (validate.rules).string = {in: ["asc", "desc"]},
    json_name="order_by",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "排序类型，选填参数，取值范围asc,desc"}];

  // @inject_tag: json:"task_id"
  optional int32 task_id = 5[
    (validate.rules).int32 = {gt: 0},
    json_name="task_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "任务id，选填参数，数值限制[1,~)"}];
}

message GetTaskResp {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "获取任务接口返回参数"
      description: "获取任务返回参数类型: GetTaskResp"
    }
  };

  // @inject_tag: json:"code"
  int32 code = 1[
    json_name="code",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "返回码，整数类型，非0即服务处理失败"}];

  // @inject_tag: json:"message"
  string message = 2[
    json_name="message",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "返回信息，字符串类型，服务处理失败时，包含相应错误信息"}];

  // @inject_tag: json:"data"
  GetTaskRespData data = 3[
    json_name="data",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "接口返回数据"}];
}

message GetTaskRespData {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "任务信息"
      description: "任务信息类型: GetTaskRespData"
      required: ["total", "list"]
    }
  };

  // @inject_tag: json:"total"
  int32 total = 1[
    json_name="total",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "记录数"}];

  // @inject_tag: json:"list"
  repeated TaskDetail list = 2[
    json_name="list",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "任务信息列表"}];
}

message TaskDetail {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "任务详细信息"
      description: "任务详细信息类型: TaskDetail"
      required: ["task", "exec"]
    }
  };

  // @inject_tag: json:"task"
  module.Task task = 1[
    json_name="task",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "任务基本信息"}];

  // @inject_tag: json:"execs"
  repeated module.TaskExec execs = 2[
    json_name="execs",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "任务执行信息"}];
}

message FinishTaskReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "任务完成接口请求参数"
      description: "任务完成请求参数类型: FinishTaskReq"
      required: ["task_id", "result"]
    }
  };

  // @inject_tag: json:"task_id"
  int32 task_id = 1[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gt: 0},
    json_name="task_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "任务id，必填参数，整数类型，数值限制[1,~)"}];

  // @inject_tag: json:"result"
  int32 result = 2[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gte: 0},
    json_name="result",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "任务结果，必填参数，整数类型，数值限制[0,~)，1：成功；2：失败"}];

  // @inject_tag: json:"return"
  optional string return = 3[
    (validate.rules).string = {min_len: 0},
    json_name="return",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "任务执行返回信息，选填参数，字符串类型"}];
}

message RetryTaskReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "任务重试接口请求参数"
      description: "任务重试请求参数类型: RetryTaskReq"
      required: ["task_id"]
    }
  };

  // @inject_tag: json:"task_id"
  int32 task_id = 1[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gt: 0},
    json_name="task_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "任务id，必填参数，整数类型，数值限制[1,~)"}];
}

message CancelTaskReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "任务取消接口请求参数"
      description: "任务取消请求参数类型: CancelTaskReq"
      required: ["task_id"]
    }
  };

  // @inject_tag: json:"task_id"
  int32 task_id = 1[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gt: 0},
    json_name="task_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "任务id，必填参数，整数类型，数值限制[1,~)"}];
}

message PostConfigReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "新增配置项接口请求参数"
      description: "新增配置项请求参数类型: PostConfigReq"
      required: ["key", "value"]
    }
  };

  // @inject_tag: json:"key"
  string key = 1[
    (validate.rules).any.required = true,
    (validate.rules).string = {min_len: 1, max_len: 64},
    json_name="key",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "配置项名称，必填参数，字符串类型, 长度限制1~64"}];

  // @inject_tag: json:"value"
  string value = 2[
    (validate.rules).any.required = true,
    (validate.rules).string = {min_len: 0, max_len: 1024},
    json_name="value",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "配置项值, 必填参数，字符串类型，长度限制0~1024"}];

  // @inject_tag: json:"desc"
  optional string desc = 3[
    (validate.rules).string = {min_len: 0, max_len: 1024},
    json_name="desc",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "配置项描述信息, 选填参数，字符串类型，长度限制0~1024"}];
}

message GetConfigReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "获取配置项接口请求参数"
      description: "获取配置项请求参数类型: GetConfigReq"
      required: ["page_index", "page_size"]
    }
  };

  // @inject_tag: json:"page_index"
  int32 page_index = 1[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gt: 0},
    json_name="page_index",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "页码，必填参数，数值限制大于0"}];

  // @inject_tag: json:"page_size"
  int32 page_size = 2[
    (validate.rules).any.required = true,
    (validate.rules).int32 = {gt: 0, lt: 100},
    json_name="page_size",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "单页记录数，必填参数，数值限制[1,100)"}];

  // @inject_tag: json:"sort_by"
  optional string sort_by = 3[
    (validate.rules).string = {min_len: 1},
    json_name="sort_by",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "排序字段，选填参数，字符串长度限制1~"}];

  // @inject_tag: json:"order_by"
  optional string order_by = 4[
    (validate.rules).string = {in: ["asc", "desc"]},
    json_name="order_by",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "排序类型，选填参数，取值范围asc,desc"}];

  // @inject_tag: json:"key"
  optional string key = 5[
    (validate.rules).string = {min_len: 1, max_len: 64},
    json_name="key",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "配置项名称，选填参数，字符串类型, 长度限制1~64"}];

  // @inject_tag: json:"status"
  optional int32 status = 6[
    (validate.rules).int32 = {gte: 0},
    json_name="status",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "配置项状态, 选填参数，整数类型，数值限制[0,~)，1：有效；2：无效"}];
}

message GetConfigResp {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "获取配置项接口返回参数"
      description: "获取配置项返回参数类型: GetConfigResp"
    }
  };

  // @inject_tag: json:"code"
  int32 code = 1[
    json_name="code",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "返回码，整数类型，非0即服务处理失败"}];

  // @inject_tag: json:"message"
  string message = 2[
    json_name="message",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "返回信息，字符串类型，服务处理失败时，包含相应错误信息"}];

  // @inject_tag: json:"data"
  GetConfigRespData data = 3[
    json_name="data",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "接口返回数据"}];
}

message GetConfigRespData {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "配置信息"
      description: "配置信息类型: GetConfigRespData"
      required: ["total", "list"]
    }
  };

  // @inject_tag: json:"total"
  int32 total = 1[
    json_name="total",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "记录数"}];

  // @inject_tag: json:"list"
  repeated module.Config list = 2[
    json_name="list",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "配置信息列表"}];
}

message PutConfigReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "更新配置项接口请求参数"
      description: "更新配置项请求参数类型: PutConfigReq"
      required: ["key"]
    }
  };

  // @inject_tag: json:"key"
  string key = 1[
    (validate.rules).any.required = true,
    (validate.rules).string = {min_len: 1, max_len: 64},
    json_name="key",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "配置项唯一标识，必填参数，字符串类型, 长度限制1~64"}];

  // @inject_tag: json:"value"
  optional string value = 2[
    (validate.rules).string = {min_len: 0, max_len: 1024},
    json_name="value",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "配置项值, 选填参数，字符串类型，长度限制0~1024"}];

  // @inject_tag: json:"status"
  optional int32 status = 3[
    (validate.rules).int32 = {gte: 0},
    json_name="status",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "配置项状态, 选填参数，整数类型，数值限制[0,~)，1：有效；2：无效"}];

  // @inject_tag: json:"desc"
  optional string desc = 4[
    (validate.rules).string = {min_len: 0, max_len: 1024},
    json_name="desc",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "配置项描述信息, 选填参数，字符串类型，长度限制0~1024"}];
}